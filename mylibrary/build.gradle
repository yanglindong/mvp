apply plugin: 'com.android.library'

android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName  rootProject.ext.android.versionName

    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    // This is important, it will run lint checks but won't abort build
    lintOptions {
        //移除lint检查的error
        abortOnError false
        //禁止掉某些lint检查
        checkReleaseBuilds false
        disable 'NewApi'
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile rootProject.ext.dependencies.appcompatV7
    compile rootProject.ext.dependencies.design
    compile rootProject.ext.dependencies.supportV4
    compile rootProject.ext.dependencies.gridlayoutV7
    compile rootProject.ext.dependencies.gson
    compile rootProject.ext.dependencies.rxjava2
    compile rootProject.ext.dependencies.chuck
    compile rootProject.ext.dependencies.butterknife
    compile rootProject.ext.dependencies.imagepicker
    compile rootProject.ext.dependencies.okgo
    compile rootProject.ext.dependencies.okrx2
    compile rootProject.ext.dependencies.okserver
}
